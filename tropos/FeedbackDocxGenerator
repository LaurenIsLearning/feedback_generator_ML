# feedback_docx.py
from docx import Document
from docx.shared import Pt, RGBColor

class FeedbackDocxGenerator:
    STYLES = {
        'header': {'size': 14, 'bold': True, 'color': (0, 32, 96)},
        'criteria': {'size': 12, 'bold': True, 'color': (42, 92, 170)},
        'comment': {'size': 11, 'color': (0, 0, 0)},
        'suggestion': {'size': 11, 'italic': True, 'color': (79, 97, 40)}
    }

    def _apply_style(self, run, style_name):
        style = self.STYLES[style_name]
        run.font.size = Pt(style['size'])
        run.font.bold = style.get('bold', False)
        run.font.italic = style.get('italic', False)
        run.font.color.rgb = RGBColor(*style['color'])

    def create_document(self, output_path, rubric_data, inline_comments, overall_feedback):
        doc = Document()
        
        # Header
        header = doc.sections[0].header
        header_run = header.paragraphs[0].add_run("Automated Feedback Report")
        self._apply_style(header_run, 'header')

        # Rubric Section
        doc.add_heading('Rubric Assessment', level=1)
        for criterion in rubric_data.get('criteria', []):
            p = doc.add_paragraph()
            criteria_run = p.add_run(f"{criterion['id']}. {criterion['description']}")
            self._apply_style(criteria_run, 'criteria')
            doc.add_paragraph(f"Score: {criterion['score']}/{criterion['max_score']}")
            doc.add_paragraph(criterion['feedback'])

        # Inline Comments
        doc.add_heading('Inline Feedback', level=1)
        for comment in inline_comments:
            p = doc.add_paragraph()
            p.add_run(f"Page {comment['page']}: ").bold = True
            comment_run = p.add_run(comment['text'])
            self._apply_style(comment_run, 'comment')
            
            if comment.get('suggestion'):
                sugg_p = doc.add_paragraph()
                sugg_run = sugg_p.add_run("Suggestion: ")
                self._apply_style(sugg_run, 'suggestion')
                sugg_p.add_run(comment['suggestion'])

        # Overall Feedback
        doc.add_heading('Overall Assessment', level=1)
        doc.add_paragraph(overall_feedback)

        doc.save(output_path)